import React from 'react';
import { View, Text, StyleSheet, TouchableOpacity, SafeAreaView, ScrollView } from 'react-native';
import { router } from 'expo-router';
import { useAuth } from '../contexts/AuthContext';
import { useSimpleI18n } from '../contexts/SimpleI18nContext';
import { SimpleLanguageSelector } from '../components/SimpleLanguageSelector';
import { Ionicons } from '@expo/vector-icons';

export default function DashboardScreen() {
  const { user, logout } = useAuth();
  const { t } = useSimpleI18n();

  const handleLogout = async () => {
    await logout();
    router.replace('/');
  };

  const getRoleDisplay = (role: string) => {
    switch (role) {
      case 'customer':
        return { icon: 'person', label: t('auth.customerRole'), color: '#007AFF' };
      case 'store_admin':
        return { icon: 'storefront', label: t('auth.storeRole'), color: '#FF9500' };
      case 'delivery':
        return { icon: 'bicycle', label: t('auth.deliveryRole'), color: '#34C759' };
      default:
        return { icon: 'person', label: 'User', color: '#999' };
    }
  };

  const roleInfo = getRoleDisplay(user?.role || 'customer');

  return (
    <SafeAreaView style={styles.container}>
      <ScrollView contentContainerStyle={styles.scrollContent}>
        {/* Header */}
        <View style={styles.header}>
          <View style={styles.headerTop}>
            <Text style={styles.welcomeText}>–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å!</Text>
            <SimpleLanguageSelector />
          </View>
          
          <View style={styles.userInfo}>
            <View style={[styles.roleIcon, { backgroundColor: roleInfo.color + '20' }]}>
              <Ionicons name={roleInfo.icon as any} size={32} color={roleInfo.color} />
            </View>
            <View style={styles.userDetails}>
              <Text style={styles.userName}>{user?.full_name}</Text>
              <Text style={styles.userEmail}>{user?.email}</Text>
              <View style={styles.roleContainer}>
                <Text style={[styles.roleText, { color: roleInfo.color }]}>
                  {roleInfo.label}
                </Text>
              </View>
            </View>
          </View>
        </View>

        {/* Success Message */}
        <View style={styles.successCard}>
          <Ionicons name="checkmark-circle" size={48} color="#34C759" />
          <Text style={styles.successTitle}>üéâ –£—Å–ø–µ—à–Ω–∞—è —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è!</Text>
          <Text style={styles.successText}>
            –í–∞—à –∞–∫–∫–∞—É–Ω—Ç –±—ã–ª —É—Å–ø–µ—à–Ω–æ —Å–æ–∑–¥–∞–Ω. –¢–µ–ø–µ—Ä—å –≤—ã –º–æ–∂–µ—Ç–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è –≤—Å–µ–º–∏ —Ñ—É–Ω–∫—Ü–∏—è–º–∏ EcuaDelivery.
          </Text>
        </View>

        {/* Features */}
        <View style={styles.featuresContainer}>
          <Text style={styles.featuresTitle}>–î–æ—Å—Ç—É–ø–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏:</Text>
          
          <View style={styles.featureItem}>
            <Ionicons name="restaurant" size={24} color="#007AFF" />
            <View style={styles.featureContent}>
              <Text style={styles.featureTitle}>–ö–∞—Ç–∞–ª–æ–≥ –ø—Ä–æ–¥—É–∫—Ç–æ–≤</Text>
              <Text style={styles.featureDescription}>–ü—Ä–æ—Å–º–∞—Ç—Ä–∏–≤–∞–π—Ç–µ —Ç–æ–≤–∞—Ä—ã –æ—Ç –ª—É—á—à–∏—Ö –º–∞–≥–∞–∑–∏–Ω–æ–≤</Text>
            </View>
          </View>

          <View style={styles.featureItem}>
            <Ionicons name="card" size={24} color="#007AFF" />
            <View style={styles.featureContent}>
              <Text style={styles.featureTitle}>–ë–µ–∑–æ–ø–∞—Å–Ω—ã–µ –ø–ª–∞—Ç–µ–∂–∏</Text>
              <Text style={styles.featureDescription}>–û–ø–ª–∞—á–∏–≤–∞–π—Ç–µ –∑–∞–∫–∞–∑—ã –∫–∞—Ä—Ç–æ–π –∏–ª–∏ –Ω–∞–ª–∏—á–Ω—ã–º–∏</Text>
            </View>
          </View>

          <View style={styles.featureItem}>
            <Ionicons name="location" size={24} color="#007AFF" />
            <View style={styles.featureContent}>
              <Text style={styles.featureTitle}>–ë—ã—Å—Ç—Ä–∞—è –¥–æ—Å—Ç–∞–≤–∫–∞</Text>
              <Text style={styles.featureDescription}>–ü–æ–ª—É—á–∞–π—Ç–µ –∑–∞–∫–∞–∑—ã –≤ —É–¥–æ–±–Ω–æ–µ –≤—Ä–µ–º—è</Text>
            </View>
          </View>

          <View style={styles.featureItem}>
            <Ionicons name="notifications" size={24} color="#007AFF" />
            <View style={styles.featureContent}>
              <Text style={styles.featureTitle}>–£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è</Text>
              <Text style={styles.featureDescription}>–û—Ç—Å–ª–µ–∂–∏–≤–∞–π—Ç–µ —Å—Ç–∞—Ç—É—Å –≤–∞—à–∏—Ö –∑–∞–∫–∞–∑–æ–≤</Text>
            </View>
          </View>
        </View>

        {/* Actions */}
        <View style={styles.actionsContainer}>
          <TouchableOpacity style={styles.primaryAction}>
            <Ionicons name="search" size={20} color="#fff" />
            <Text style={styles.primaryActionText}>–ù–∞—á–∞—Ç—å –ø–æ–∫—É–ø–∫–∏</Text>
          </TouchableOpacity>

          <TouchableOpacity style={styles.secondaryAction}>
            <Ionicons name="person" size={20} color="#007AFF" />
            <Text style={styles.secondaryActionText}>–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å –ø—Ä–æ—Ñ–∏–ª—å</Text>
          </TouchableOpacity>

          <TouchableOpacity style={styles.logoutButton} onPress={handleLogout}>
            <Ionicons name="log-out" size={20} color="#FF3B30" />
            <Text style={styles.logoutButtonText}>–í—ã–π—Ç–∏ –∏–∑ –∞–∫–∫–∞—É–Ω—Ç–∞</Text>
          </TouchableOpacity>
        </View>
      </ScrollView>
    </SafeAreaView>
  );
}

const styles = StyleSheet.create({
  container: {
    flex: 1,
    backgroundColor: '#1a1a1a',
  },
  scrollContent: {
    flexGrow: 1,
    paddingHorizontal: 24,
    paddingVertical: 20,
  },
  header: {
    marginBottom: 32,
  },
  headerTop: {
    flexDirection: 'row',
    justifyContent: 'space-between',
    alignItems: 'center',
    marginBottom: 24,
  },
  welcomeText: {
    fontSize: 24,
    fontWeight: 'bold',
    color: '#fff',
  },
  userInfo: {
    flexDirection: 'row',
    alignItems: 'center',
  },
  roleIcon: {
    width: 64,
    height: 64,
    borderRadius: 32,
    justifyContent: 'center',
    alignItems: 'center',
    marginRight: 16,
  },
  userDetails: {
    flex: 1,
  },
  userName: {
    fontSize: 20,
    fontWeight: 'bold',
    color: '#fff',
    marginBottom: 4,
  },
  userEmail: {
    fontSize: 16,
    color: '#999',
    marginBottom: 8,
  },
  roleContainer: {
    alignSelf: 'flex-start',
  },
  roleText: {
    fontSize: 14,
    fontWeight: '600',
    paddingHorizontal: 12,
    paddingVertical: 4,
    backgroundColor: '#333',
    borderRadius: 12,
    overflow: 'hidden',
  },
  successCard: {
    backgroundColor: '#2a2a2a',
    borderRadius: 16,
    padding: 24,
    alignItems: 'center',
    marginBottom: 32,
    borderWidth: 1,
    borderColor: '#34C759',
  },
  successTitle: {
    fontSize: 20,
    fontWeight: 'bold',
    color: '#fff',
    marginTop: 16,
    marginBottom: 8,
    textAlign: 'center',
  },
  successText: {
    fontSize: 16,
    color: '#ccc',
    textAlign: 'center',
    lineHeight: 22,
  },
  featuresContainer: {
    marginBottom: 32,
  },
  featuresTitle: {
    fontSize: 18,
    fontWeight: 'bold',
    color: '#fff',
    marginBottom: 16,
  },
  featureItem: {
    flexDirection: 'row',
    alignItems: 'center',
    padding: 16,
    backgroundColor: '#2a2a2a',
    borderRadius: 12,
    marginBottom: 12,
  },
  featureContent: {
    marginLeft: 16,
    flex: 1,
  },
  featureTitle: {
    fontSize: 16,
    fontWeight: '600',
    color: '#fff',
    marginBottom: 4,
  },
  featureDescription: {
    fontSize: 14,
    color: '#999',
    lineHeight: 18,
  },
  actionsContainer: {
    gap: 12,
  },
  primaryAction: {
    backgroundColor: '#007AFF',
    flexDirection: 'row',
    alignItems: 'center',
    justifyContent: 'center',
    paddingVertical: 16,
    borderRadius: 12,
    gap: 8,
  },
  primaryActionText: {
    color: '#fff',
    fontSize: 16,
    fontWeight: '600',
  },
  secondaryAction: {
    backgroundColor: 'transparent',
    borderWidth: 1,
    borderColor: '#007AFF',
    flexDirection: 'row',
    alignItems: 'center',
    justifyContent: 'center',
    paddingVertical: 16,
    borderRadius: 12,
    gap: 8,
  },
  secondaryActionText: {
    color: '#007AFF',
    fontSize: 16,
    fontWeight: '600',
  },
  logoutButton: {
    backgroundColor: 'transparent',
    borderWidth: 1,
    borderColor: '#FF3B30',
    flexDirection: 'row',
    alignItems: 'center',
    justifyContent: 'center',
    paddingVertical: 16,
    borderRadius: 12,
    gap: 8,
  },
  logoutButtonText: {
    color: '#FF3B30',
    fontSize: 16,
    fontWeight: '600',
  },
});